{"ts":1358876990882,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"module.exports = function( grunt ) {\n  'use strict';\n  //\n  // Grunt configuration:\n  //\n  // https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n  //\n  grunt.initConfig({\n\n    // Project configuration\n    // ---------------------\n\n    // specify an alternate install location for Bower\n    bower: {\n      dir: 'app/components'\n    },\n\n    // Coffee to JS compilation\n    coffee: {\n      compile: {\n        files: {\n          'temp/scripts/*.js': 'app/scripts/**/*.coffee' \n        },\n        options: {\n          basePath: 'app/scripts'\n        }\n      }\n    },\n\n    // compile .scss/.sass to .css using Compass\n    compass: {\n      dist: {\n        // http://compass-style.org/help/tutorials/configuration-reference/#configuration-properties\n        options: {\n          css_dir: 'temp/styles',\n          sass_dir: 'app/styles',\n          images_dir: 'app/images',\n          javascripts_dir: 'temp/scripts',\n          force: true\n        }\n      }\n    },\n\n    // generate application cache manifest\n    manifest:{\n      dest: ''\n    },\n\n    // headless testing through PhantomJS\n    mocha: {\n      all: ['test/**/*.html']\n    },\n\n    // default watch configuration\n    watch: {\n      coffee: {\n        files: 'app/scripts/**/*.coffee',\n        tasks: 'coffee reload'\n      },\n      compass: {\n        files: [\n          'app/styles/**/*.{scss,sass}'\n        ],\n        tasks: 'compass reload'\n      },\n      reload: {\n        files: [\n          'app/*.html',\n          'app/styles/**/*.css',\n          'app/scripts/**/*.js',\n          'app/images/**/*'\n        ],\n        tasks: 'reload'\n      }\n    },\n\n    // default lint configuration, change this to match your setup:\n    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#lint-built-in-task\n    lint: {\n      files: [\n        'Gruntfile.js',\n        'app/scripts/**/*.js',\n        'spec/**/*.js'\n      ]\n    },\n\n    // specifying JSHint options and globals\n    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#specifying-jshint-options-and-globals\n    jshint: {\n      options: {\n        curly: true,\n        eqeqeq: true,\n        immed: true,\n        latedef: true,\n        newcap: true,\n        noarg: true,\n        sub: true,\n        undef: true,\n        boss: true,\n        eqnull: true,\n        browser: true\n      },\n      globals: {\n        jQuery: true\n      }\n    },\n\n    // Build configuration\n    // -------------------\n\n    // the staging directory used during the process\n    staging: 'temp',\n    // final build output\n    output: 'dist',\n\n    mkdirs: {\n      staging: 'app/'\n    },\n\n    // Below, all paths are relative to the staging directory, which is a copy\n    // of the app/ directory. Any .gitignore, .ignore and .buildignore file\n    // that might appear in the app/ tree are used to ignore these values\n    // during the copy process.\n\n    // concat css/**/*.css files, inline @import, output a single minified css\n    css: {\n      'styles/main.css': ['styles/**/*.css']\n    },\n\n    // renames JS/CSS to prepend a hash of their contents for easier\n    // versioning\n    rev: {\n      js: 'scripts/**/*.js',\n      css: 'styles/**/*.css',\n      img: 'images/**'\n    },\n\n    // usemin handler should point to the file containing\n    // the usemin blocks to be parsed\n    'usemin-handler': {\n      html: 'index.html'\n    },\n\n    // update references in HTML/CSS to revved files\n    usemin: {\n      html: ['**/*.html'],\n      css: ['**/*.css']\n    },\n\n    // HTML minification\n    html: {\n      files: ['**/*.html']\n    },\n\n    // Optimizes JPGs and PNGs (with jpegtran & optipng)\n    img: {\n      dist: '<config:rev.img>'\n    },\n\n    // rjs configuration. You don't necessarily need to specify the typical\n    // `path` configuration, the rjs task will parse these values from your\n    // main module, using http://requirejs.org/docs/optimization.html#mainConfigFile\n    //\n    // name / out / mainConfig file should be used. You can let it blank if\n    // you're using usemin-handler to parse rjs config from markup (default\n    // setup)\n    rjs: {\n      // no minification, is done by the min task\n      optimize: 'none',\n      baseUrl: './scripts',\n      wrap: true,\n      name: 'main'\n    },\n\n    // While Yeoman handles concat/min when using\n    // usemin blocks, you can still use them manually\n    concat: {\n      dist: ''\n    },\n\n    min: {\n      dist: ''\n    }\n  });\n\n  // Alias the `test` task to run the `mocha` task instead\n  grunt.registerTask('test', 'server:phantom mocha');\n\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":4514}]],"length":4514}
{"contributors":[],"silentsave":false,"ts":1358877094810,"patch":[[{"diffs":[[0,"mponents'\n    },"],[1,"\n    \n    // Server listening on correct port and IP\n    server: {\n        port: process.env.PORT,\n        host: process.env.IP\n    },"],[0,"\n\n    // Coffee "]],"start1":334,"start2":334,"length1":32,"length2":166}]],"length":4648,"saved":false}
