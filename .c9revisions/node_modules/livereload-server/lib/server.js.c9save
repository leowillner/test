{"ts":1358522789376,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Generated by IcedCoffeeScript 1.3.3f\n(function() {\n  var DefaultWebSocketPort, EventEmitter, LRWebSocketConnection, LRWebSocketServer, Url, debug, fs, http, wsio,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  debug = require('debug')('livereload:server');\n\n  wsio = require('websocket.io');\n\n  http = require('http');\n\n  Url = require('url');\n\n  fs = require('fs');\n\n  EventEmitter = require('events').EventEmitter;\n\n  LRWebSocketConnection = require('./connection');\n\n  DefaultWebSocketPort = parseInt(process.env['LRPortOverride'], 10) || 35729;\n\n  LRWebSocketServer = (function(_super) {\n\n    __extends(LRWebSocketServer, _super);\n\n    function LRWebSocketServer(options) {\n      var _base, _ref;\n      this.options = options;\n      if (!this.options.id) throw new Error(\"ERR_INVALID_ARG: id is required\");\n      if (!this.options.name) throw new Error(\"ERR_INVALID_ARG: name is required\");\n      if (!this.options.version) {\n        throw new Error(\"ERR_INVALID_ARG: version is required\");\n      }\n      this.port = this.options.port || DefaultWebSocketPort;\n      this.connections = {};\n      this.activeConnections = 0;\n      this.nextConnectionId = 1;\n      if ((_ref = (_base = this.options).protocols) == null) _base.protocols = {};\n    }\n\n    LRWebSocketServer.prototype.listen = function(callback) {\n      var callbackCalled,\n        _this = this;\n      callbackCalled = false;\n      this.httpServer = http.createServer();\n      try {\n        this.httpServer.on('error', function(err) {\n          if (!callbackCalled) {\n            callbackCalled = true;\n            return callback(err);\n          } else {\n            throw err;\n          }\n        });\n        return this.httpServer.listen(this.port, function(err) {\n          if (err) {\n            callbackCalled = true;\n            return callback(err);\n          }\n          _this.httpServer.on('request', function(request, response) {\n            return request.on('end', function() {\n              var url;\n              url = Url.parse(request.url, true);\n              if (url.pathname === '/livereload.js' || url.pathname === '/xlivereload.js') {\n                return _this.emit('livereload.js', request, response);\n              } else {\n                return _this.emit('httprequest', url, request, response);\n              }\n            });\n          });\n          _this.wsserver = wsio.attach(_this.httpServer);\n          _this.wsserver.on('connection', function(socket) {\n            return _this._createConnection(socket);\n          });\n          return callback(null);\n        });\n      } catch (e) {\n        return callback(e);\n      }\n    };\n\n    LRWebSocketServer.prototype.close = function() {\n      var connection, _, _ref;\n      this.httpServer.close();\n      _ref = this.connections;\n      for (_ in _ref) {\n        if (!__hasProp.call(_ref, _)) continue;\n        connection = _ref[_];\n        connection.close();\n      }\n    };\n\n    LRWebSocketServer.prototype.monitoringConnections = function() {\n      var connection, dummy, _ref, _results;\n      _ref = this.connections;\n      _results = [];\n      for (dummy in _ref) {\n        if (!__hasProp.call(_ref, dummy)) continue;\n        connection = _ref[dummy];\n        if (connection.isMonitoring()) _results.push(connection);\n      }\n      return _results;\n    };\n\n    LRWebSocketServer.prototype.monitoringConnectionCount = function() {\n      return this.monitoringConnections().length;\n    };\n\n    LRWebSocketServer.prototype._createConnection = function(socket) {\n      var connection,\n        _this = this;\n      connection = new LRWebSocketConnection(socket, \"C\" + (this.nextConnectionId++), this.options);\n      connection.on('connected', function() {\n        _this.connections[connection.id] = connection;\n        return _this.emit('connected', connection);\n      });\n      connection.on('disconnected', function() {\n        delete _this.connections[connection.id];\n        return _this.emit('disconnected', connection);\n      });\n      connection.on('command', function(command) {\n        return _this.emit('command', connection, command);\n      });\n      connection.on('error', function(err) {\n        return _this.emit('error', err, connection);\n      });\n      return connection;\n    };\n\n    return LRWebSocketServer;\n\n  })(EventEmitter);\n\n  module.exports = LRWebSocketServer;\n\n}).call(this);\n"]],"start1":0,"start2":0,"length1":0,"length2":4633}]],"length":4633}
{"contributors":[],"silentsave":false,"ts":1358523490885,"patch":[[{"diffs":[[0,"    }\n      "],[1,"\n      this.port = process.env.PORT;\n      \n      //"],[0,"this.port = "]],"start1":1284,"start2":1284,"length1":24,"length2":76}]],"length":4685,"saved":false}
{"ts":1358525175457,"patch":[[{"diffs":[[0,"        "],[1,"\n              url = process.env.IP;\n              \n              //"],[0,"url = Ur"]],"start1":2323,"start2":2323,"length1":16,"length2":84}]],"length":4753,"saved":false}
{"ts":1358525358996,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0,"if (url.path"]],"start1":2437,"start2":2437,"length1":24,"length2":26},{"diffs":[[0,"                "],[1,"//"],[0,"return _this.emi"]],"start1":2530,"start2":2530,"length1":32,"length2":34},{"diffs":[[0,";\n              "],[1,"//"],[0,"} else {\n       "]],"start1":2601,"start2":2601,"length1":32,"length2":34},{"diffs":[[0,"est, response);\n"],[-1,""],[0,"              }\n"]],"start1":2686,"start2":2686,"length1":32,"length2":32},{"diffs":[[0,";\n              "],[1,"//"],[0,"}\n            })"]],"start1":2700,"start2":2700,"length1":32,"length2":34}]],"length":4761,"saved":false}
{"ts":1358525443859,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"return _"]],"start1":2538,"start2":2538,"length1":18,"length2":16},{"diffs":[[0,"                "],[1,"//"],[0,"return _this.emi"]],"start1":2626,"start2":2626,"length1":32,"length2":34}]],"length":4761,"saved":false}
{"ts":1358525479567,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"url = Ur"]],"start1":2389,"start2":2389,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,"if (url."]],"start1":2439,"start2":2439,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,"} else {"]],"start1":2603,"start2":2603,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,"return _"]],"start1":2628,"start2":2628,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,"}\n      "]],"start1":2700,"start2":2700,"length1":18,"length2":16}]],"length":4751,"saved":false}
