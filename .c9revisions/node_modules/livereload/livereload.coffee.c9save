{"ts":1358528149390,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"fs   = require 'fs'\npath = require 'path'\nws   = require 'websocket.io'\n\nversion = '1.6'\ndefaultPort = 35729\n\ndefaultExts = [\n  'html', 'css', 'js', 'png', 'gif', 'jpg',\n  'php', 'php5', 'py', 'rb', 'erb'\n]\n\ndefaultExclusions = ['.git/', '.svn/', '.hg/']\n\nclass Server\n  constructor: (@config) ->\n    @config ?= {}\n\n    @config.version ?= version\n    @config.port    ?= defaultPort\n\n    @config.exts       ?= []\n    @config.exclusions ?= []\n\n    @config.exts       = @config.exts.concat defaultExts\n    @config.exclusions = @config.exclusions.concat defaultExclusions\n\n    @config.applyJSLive  ?= false\n    @config.applyCSSLive ?= true\n\n    @sockets = []\n    \n  listen: ->\n    @debug \"LiveReload is waiting for browser to connect.\"\n    \n    @server = ws.listen(@config.port)\n\n    @server.on 'connection', @onConnection.bind @\n    @server.on 'close',      @onClose.bind @\n\n\n  onConnection: (socket) ->\n    @debug \"Browser connected.\"\n    socket.send \"!!ver:#{@config.version}\"\n\n    socket.on 'message', (message) =>\n      @debug \"Browser URL: #{message}\"\n\n    @sockets.push socket\n    \n  onClose: (socket) ->\n    @debug \"Browser disconnected.\"\n\n  walkTree: (dirname, callback) ->\n    exts       = @config.exts\n    exclusions = @config.exclusions\n\n    walk = (dirname) ->\n      fs.readdir dirname, (err, files) ->\n        if err then return callback err\n\n        files.forEach (file) ->\n          filename = path.join dirname, file\n\n          for exclusion in exclusions\n            return if filename.match exclusion\n\n          fs.stat filename, (err, stats) ->\n            if !err and stats.isDirectory()\n              walk filename\n            else\n              for ext in exts when filename.match \"\\.#{ext}$\"\n                callback err, filename\n                break\n\n    walk dirname, callback\n\n  watch: (dirname) ->\n    @walkTree dirname, (err, filename) =>\n      throw err if err\n      fs.watchFile filename, (curr, prev) =>\n        if curr.mtime > prev.mtime\n          @refresh filename\n\n  refresh: (path) ->\n    @debug \"Refresh: #{path}\"\n    data = JSON.stringify ['refresh',\n      path: path,\n      apply_js_live: @config.applyJSLive,\n      apply_css_live: @config.applyCSSLive\n    ]\n\n    for socket in @sockets\n      socket.send data\n\n  debug: (str) ->\n    if @config.debug\n      console.log \"#{str}\\n\"\n\nexports.createServer = (args...) ->\n  server = new Server args...\n  server.listen()\n  server\n"]],"start1":0,"start2":0,"length1":0,"length2":2410}]],"length":2410}
